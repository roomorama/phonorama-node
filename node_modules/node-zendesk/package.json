{
  "name": "node-zendesk",
  "version": "0.0.9",
  "description": "zendesk API client wrapper",
  "keywords": [
    "zendesk",
    "API",
    "support",
    "supportdesk",
    "buddha",
    "radar",
    "wrapper"
  ],
  "homepage": "https://github.com/blakmatrix/node-zendesk",
  "repository": {
    "type": "git",
    "url": "git://github.com/blakmatrix/node-zendesk.git"
  },
  "main": "./lib/client.js",
  "scripts": {
    "test": "node ./test/*-test.js"
  },
  "author": {
    "name": "Farrin Reid",
    "email": "blakmatrix@gmail.com"
  },
  "dependencies": {
    "request": "2.14.x",
    "querystring": "0.2.x",
    "async": "0.2.x",
    "flatten": "0.0.x",
    "nconf": "0.6.x"
  },
  "readme": "# node-zendesk\n---\n[![build status](https://secure.travis-ci.org/blakmatrix/node-zendesk.png)](http://travis-ci.org/blakmatrix/node-zendesk)\n\n\n## Example\n\n```js\nvar zendesk = require('node-zendesk'),\n    fs      = require('fs');\n\nvar client = zendesk.createClient({\n  username:  'username',\n  token:     'token',\n  remoteUri: 'https://remote.zendesk.com/api/v2'\n});\n\nclient.users.list(function (err, req, result) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n  console.log(JSON.stringify(result[0], null, 2, true));//gets the first page\n});\n```\nTake a look in the `examples` folder for more examples.\n\n## Install\n\nInstall using npm:\n```bash\nnpm install node-zendesk\n```\n\n## Using OAuth for Authentication\n\nIf you want to use an OAuth token to authenticate with Zendesk, pass in the `oauth` key with a value of true when creating the client.\n\nYou can learn more about obtaining OAuth tokens from [Zendesk's developer site](https://support.zendesk.com/entries/24458591-Using-OAuth-authentication-with-your-application).\n\n```js\nvar zendesk = require('node-zendesk'),\n    fs      = require('fs');\n\nvar client = zendesk.createClient({\n  username:  'username',\n  token:     'oauth_token',\n  remoteUri: 'https://remote.zendesk.com/api/v2',\n  oauth: true\n});\n```\n\n\n## Command Line Options for scripts\n\nBelow is a list of options you may use when calling any scripts you may have written\n\n```\n-s --subdomain X\n-u --username X\n-p --password X\n-t --token X\n-r --remoteUri X\n--debug\n--no-cookies\n--timeout X(ms)\n--proxy X\n--encoding X\n```\n\nThey are fairly self-explanatory no-cookies, timeout, proxy, encoding are all options to request. if using debug its reccomended you use `--encoding utf8` or something similar as all you will see is a buffer otherwise in the response.\n\nBecause of these command line options you can try a few already from the examples section:\n\n```bash\nnode examples/users-list.js -u <username> -t <token> -s <subdomain>\nnode examples/check-auth.js -u <username> -p <password> -s <subdomain>\nnode examples/check-auth-token.js -u <username> -t <token> -s <subdomain>\nnode examples/users-list.js -u <username> -t <token> -s <subdomain>\n```\n\n## client\n\n\n```js\nrequest(method, uri)\nrequestAll(method, uri) //pulls back multiple pages\nrequestUpload(uri, file, fileToken, callback)\n```\n\n## Methods\n\n### accountsettings\n\n```js\nshow(cb)\n```\n\n### activitystream\n\n```js\nshow(activityID, cb)\nlist(cb)\n```\n\n### attachments\n\n```js\nupload(file, fileToken, cb)\n```\n\n### categories\n\n```js\nlist(cb)\nshow(categoryID, cb)\ncreate(category, cb)\nupdate(categoryID, category, cb)\ndelete(categoryID, cb)\n```\n\n### customagentroles\n\n```js\nlist(cb)\n```\n\n### forums\n\n```js\nlist(cb)\nlistByCategory(categoryID, cb)\nshow(forumID, cb)\ncreate(forum, cb)\nupdate(forumID, forum, cb)\ndelete(forumID, cb)\n```\n\n### forumsubscriptions\n\n```js\nlist(cb)\nlistByForum(forumID, cb)\nshow(forumSubscriptionID, cb)\ncreate(forumSubscription, cb)\ndelete(forumSubscriptionID, cb)\n```\n\n### groupmemberships\n\n```js\nlist(cb)\nlistByUser(userID, cb)\nlistByGroup(groupID, cb)\nshow(groupMembershipID, cb)\nshowByUser(userID, groupMembershipID, cb)\ncreate(groupMembership, cb)\ncreateByUser(userID, groupMembership, cb)\ndelete(groupMembershipID, cb)\ndeleteByUser(userID, groupMembershipID, cb)\nmakeDefault(userID, groupMembershipID, cb)\n```\n\n### groups\n\n```js\nlist(cb)\nassignable(cb)\nshow(groupID, cb)\ncreate(group, cb)\nupdate(groupID, group, cb)\ndelete(groupID, cb)\n```\n\n### jobstatuses\n\n```js\nshow(jobStatusID, cb)\nwatch(jobStatusID, interval, maxAttempts, cb)\n```\n\n### locales\n\n```js\nlist(cb)\nshow(localeID, cb)\nshowCurrent(cb)\ncurrent(cb)\n```\n\n### macros\n\n```js\nlist(cb)\napply(macroID, cb)\napplyTicket(ticketID, macroID, cb)\n```\n\n### organizations\n\n```js\nlist(cb)\nshow(organizationID, cb)\ncreate(organization, cb)\nupdate(organizationID, organization, cb)\ndelete(organizationID, cb)\n```\n\n### organizationfields\n\n```js\nlist(cb)\nshow(organizationFieldID, cb)\ncreate(organizationField, cb)\nupdate(organizationFieldID, organizationField, cb)\ndelete(organizationFieldID, cb)\n```\n\n### requests\n\n```js\nlist(cb)\nlistOpen(cb)\nlistSolved(cb)\nlistCCD(cb)\nlistByUser(userID, cb)\nlistByOrganization(orgID, cb)\ngetRequest(requestID, cb)\ncreate(request, cb)\nupdate(requestID, request, cb)\nlistComments(requestID, cb)\ngetComment(requestID, commentID, cb)\n```\n\n### satisfactionratings\n\n```js\nlist(cb)\nreceived(cb)\nshow(satisfactionRatingID, cb)\n```\n\n### search\n\n```js\nquery(searchTerm, cb)\nqueryAll(searchTerm, cb)\nqueryAnonymous (searchTerm, cb)\nqueryAnonymousAll (searchTerm, cb)\n```\n\n### suspendedtickets\n\n```js\nlist(cb)\nshow(suspendedTicketID, cb)\nrecover(suspendedTicketID, cb)\nrecoverMany(suspendedTicketIDs, cb)\ndelete(suspendedTicketID, cb)\ndestroyMany(suspendedTicketIDs, cb)\ndeleteMany(suspendedTicketIDs, cb)\n```\n\n### tags\n\n```js\nlist(cb)\n```\n\n### ticketaudits\n\n```js\nlist(ticketID, cb)\n```\n\n### ticketfields\n\n```js\nlist(cb)\nshow(ticketFieldID, cb)\ncreate(ticketField, cb)\nupdate(ticketFieldID, ticketField, cb)\ndelete(ticketFieldID, cb)\n```\n\n### tickets\n\n```js\nlist(cb)\nlistByOrganization(orgID, cb)\nlistByUserRequested(userID, cb)\nlistByUserCCD(userID, cb)    // email cc\nlistRecent(cb)\nlistCollaborators(ticketID, cb)\nlistIncidents(ticketID, cb)\nshow(ticketID, cb)\ncreate(ticket, cb)\nupdate(ticketID, ticket, cb)\nupdateMany(ticket_ids, ticket, cb)\ndelete(ticketID, cb)\nexport(startTime, cb)        //1000 per page export\nexportSample(startTime, cb)  //Ticket Export Sample (max 50 tickets per request)\nexportAudit(ticketID, cb)    //Listing Audits\ngetComments(ticketID, cb)\n```\n\n### topiccomments\n\n```js\nlist(topicID, cb)\nlistByUser(userID, cb)\nshow(topicID, commentID, cb)\nshowByUser(userID, commentID, cb)\ncreate(topicID, comment, cb)\nupdate(topicID, commentID, comment, cb)\ndelete(topicID, commentID, cb)\n```\n\n### topics\n\n```js\nlist(cb)\nlistByForum(forumID, cb)\nlistByUser(userID, cb)\nshow(topicID, cb)\nshowMany(topicIDs, cb)\ncreate(topic, cb)\nupdate(topicID, topic, cb)\ndelete(topicID, cb)\n```\n\n### topicsubscriptions\n\n```js\nlist(cb)\nlistByTopic(topicID, cb)\nshow(topicSubscriptionsID, cb)\ncreate(topicSubscription, cb)\ndelete(topicSubscriptionsID, cb)\n```\n\n### topicvotes\n\n```js\nlist(topicID, cb)\nlistByUser(userID, cb)\nshow(topicID, cb)\ncreate(topicID, vote, cb)\ndelete(topicID, cb)\n```\n\n### useridentities\n\n```js\nlist(userID, cb)\nshow(userID, userIDentityID, cb)\ncreate(userID, userIDentity, cb)\nupdate(userID, userIDentityID, cb)\nmakePrimary(userID, userIDentityID,  cb)\nverify(userID, userIDentityID, cb)\nrequestVerification(userID, userIDentityID, cb)\nunsuspend(userId, cb)\ndelete(userID, userIDentityID, cb)\n```\n\n### users\n\n```js\nauth(cb) //also me()\nlist(cb)\nlistByGroup(id, cb)\nlistByOrganization(id, cb)\nshow(id, cb)\ncreate(user, cb)\ncreateMany(users, cb)\nupdate(id, user, cb)\nsuspend(id, cb)\ndelete(id, cb)\nsearch(params, cb)\nme(cb)\n```\n\n### userfields\n\n```js\nlist(cb)\nshow(userFieldID, cb)\ncreate(userField, cb)\nupdate(userFieldID, userField, cb)\ndelete(userFieldID, cb)\n```\n\n### views\n\n```js\nlist(cb)\nlistActive(cb)\nlistCompact(cb)\nshow(viewID, cb)\ncreate(view, cb)\nupdate(viewID, cb)\nexecute(viewID, params, cb)\ntickets(viewID, cb)\npreview(params, cb)\nshowCount(viewID, cb)\nshowCounts(viewIDs, cb)\nexport(viewID, cb)\n```\n\n\n## Tests\n\nToDO\n\n## License\n\nMIT.\n",
  "readmeFilename": "ReadMe.md",
  "bugs": {
    "url": "https://github.com/blakmatrix/node-zendesk/issues"
  },
  "_id": "node-zendesk@0.0.9",
  "dist": {
    "shasum": "fb9535756f593685cc668735cd20bd98b04b94b4"
  },
  "_from": "node-zendesk@0.0.9",
  "_resolved": "https://registry.npmjs.org/node-zendesk/-/node-zendesk-0.0.9.tgz"
}
